name: Publish Public Snapshot

on:
  push:
    tags:
      - 'v*'
    branches:
      - public
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}

    steps:
      - name: Debug token availability
        run: |
          if [ -z "$PUBLIC_REPO_TOKEN" ]; then
            echo "❌ PUBLIC_REPO_TOKEN is empty!"
            exit 1
          fi
          echo "✅ PUBLIC_REPO_TOKEN length: ${#PUBLIC_REPO_TOKEN}"

      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # potrzebne, żeby tagi były dostępne
          persist-credentials: false # Żeby nie wrzucało domyślnych credentiali

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "actions@github.com"
          git config --global init.defaultBranch master

      - name: Debug token length
        run: |
          echo "Token length: ${#PUBLIC_REPO_TOKEN}"

      - name: Prepare snapshot
        run: |
          # Tworzymy tymczasowy katalog
          rm -rf /tmp/public-repo
          mkdir -p /tmp/public-repo

          # Kopiujemy pliki z bieżącej gałęzi public, ale wykluczamy niechciane katalogi
          rsync -av \
            --exclude='dev/' \
            --exclude='secret/' \
            --exclude='docs/' \
            --exclude='.github/workflows/' \
            ./ /tmp/public-repo/

      - name: Push snapshot to public repo
        run: |
          cd /tmp/public-repo
          git init
          git add .
          
          # commit z nazwą taga (jeśli istnieje)
          TAG_NAME="${GITHUB_REF##*/}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            COMMIT_MSG="Public release: $TAG_NAME"
          else
            COMMIT_MSG="Public sync from branch 'public' ($(date '+%F %T'))"
          fi
          
          git commit -m "$COMMIT_MSG" || true
          
          git branch -M master
          git remote remove origin || true
          git config --unset-all http.https://github.com/.extraheader || true
          
          git remote add origin https://x-access-token:${PUBLIC_REPO_TOKEN}@github.com/bendarmultimedia/vue-map-maker.git
          
          echo "=== Remote config ==="
          git remote -v
          git config --get remote.origin.url
          
          # Push bez merge, nadpisując historię master w public repo
          git push origin master --force
          
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME" --force
          fi